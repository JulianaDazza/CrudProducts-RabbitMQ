
package co.com.hyunseda.market.presentation;
import java.io.File;
import java.io.UnsupportedEncodingException;
import java.net.URLDecoder;
import co.com.hyunseda.market.domain.Carrito;
import co.com.hyunseda.market.domain.Product;
import co.com.hyunseda.market.infra.Observer;
import co.com.hyunseda.market.infra.Publisher;
import co.com.hyunseda.market.main.ClientMain;
import co.com.hyunseda.market.service.CarritoService;
import co.com.hyunseda.market.service.ProductService;
import com.unicauca.pay.crudproducts.core.PayCore;
import com.unicauca.pay.crudproducts.business.ProductServiceDelivery;
import com.unicauca.pay.crudproducts.business.DeliveryService;
import com.unicauca.pay.crudproducts.common.ProductDelivery;
import com.unicauca.pay.crudproducts.manager.PluginManager;

import com.google.gson.Gson;
//import co.unicauca.pago.business.DeliveryService;
//import co.unicauca.pago.business.ProductServiceDelivery;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author JUAN DAVID
 */
public class GUIStockWindow extends javax.swing.JFrame implements Observer{

    private ProductService productService;
    private CarritoService carritoService;
    private GUIStore objStore;
    private ProductServiceDelivery productServicedelivery;
    private DeliveryService deliveryService;
    List<Product> products;
    Publisher publisher;
    /**
     * Creates new form GUIStockWindow
     * @param prmItem
     * @param prmSt
     */
    public GUIStockWindow(CarritoService prmItem, GUIStore prmSt) {
        this.carritoService = prmItem;
        this.objStore = prmSt;
        productServicedelivery = new ProductServiceDelivery();
        
        String basePath = getBaseFilePath();
        try {
            PluginManager.init(basePath);
        } catch (Exception ex) {
            Logger.getLogger("Application").log(Level.SEVERE, "Error al ejecutar la aplicaci√≥n", ex);
        }
        
        publisher = new Publisher();
        //createObservers();
        initComponents();
        txtAmount.setEnabled(false);
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlTitle = new javax.swing.JPanel();
        lblTitulo = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        btnAddCart = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        txtAmount = new javax.swing.JTextField();
        btnCancel = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        lblTitulo.setText("Agregando al carrito...");
        pnlTitle.add(lblTitulo);

        getContentPane().add(pnlTitle, java.awt.BorderLayout.PAGE_START);

        btnAddCart.setText("Agregar");
        btnAddCart.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddCartActionPerformed(evt);
            }
        });

        jLabel1.setText("Cantidad:");

        txtAmount.setText("1");

        btnCancel.setText("Cancelar");
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addComponent(jLabel1))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(103, 103, 103)
                        .addComponent(btnAddCart)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnCancel)
                    .addComponent(txtAmount, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(142, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(78, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtAmount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(49, 49, 49)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAddCart)
                    .addComponent(btnCancel))
                .addGap(102, 102, 102))
        );

        getContentPane().add(jPanel1, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnAddCartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddCartActionPerformed
       Carrito atrItem = new Carrito(carritoService.getCarrito().getProductos(),0);
       atrItem.setTotalArticulos(Integer.parseInt(txtAmount.getText()));
       objStore.addItem(atrItem);
       carritoService.setCarrito(atrItem,objStore.getItemList());
       
       Product product = atrItem.getProductos();
            ProductDelivery productDelivery = new ProductDelivery(
                product.getProductId(),
                product.getName(),
                product.getDescription(),
                product.getPrice(),
                (int)product.getStock(),
                product.getName(),
                product.getDescription()
            );
            Gson gson = new Gson();
            String msgJson = gson.toJson(productDelivery);
            
            
            publisher.publish(msgJson);
       
       
       this.dispose();
       
    }//GEN-LAST:event_btnAddCartActionPerformed

    private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed
        this.dispose();
        objStore = new GUIStore(productService, carritoService);
        objStore.setVisible(true);
    }//GEN-LAST:event_btnCancelActionPerformed

  
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddCart;
    private javax.swing.JButton btnCancel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel lblTitulo;
    private javax.swing.JPanel pnlTitle;
    private javax.swing.JTextField txtAmount;
    // End of variables declaration//GEN-END:variables
    private String getBaseFilePath() {
        try {
            String path = ClientMain.class.getProtectionDomain().getCodeSource().getLocation().getPath();
            path = URLDecoder.decode(path, "UTF-8"); //This should solve the problem with spaces and special characters.
            File pathFile = new File(path);
            if (pathFile.isFile()) {
                path = pathFile.getParent();
                
                if (!path.endsWith(File.separator)) {
                    path += File.separator;
                }
            }

            return path;
        } catch (UnsupportedEncodingException ex) {
            Logger.getLogger(PayCore.class.getName()).log(Level.SEVERE, "Error al eliminar espacios en la ruta del archivo", ex);
            return null;
        }
    }
    @Override
    public void update(Object o) {
        this.setVisible(true);
        CarritoService itemService = (CarritoService) o;
        //fillTable(itemService.getItemList());
    }
}
